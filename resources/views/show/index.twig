{% extends 'layout.twig' %} {% block content %} {% block javascripts %}
{{ parent() }}
{{ encore_entry_script_tags("addRemoveShow") }}
{{ encore_entry_script_tags("show") }}
{% endblock %}
<section
  class="mt-4 lg:mt-2 mb-4 mx-2 lg:mx-0 flex flex-col gap-2 lg:flex-row lg:items-start"
  {%
  if
  user
  %}
  user
  {%
  endif
  %}
>
  {% include 'components/episode-modal.twig' %}

  <div class="grow flex flex-col gap-10">
    <div
      class="navbar gap-4 flex-col lg:flex-row lg:justify-between lg:py-4 lg:px-20 lg:bg-base-200 lg:h-20 lg:rounded-lg"
    >
      <h1
        class="block text-xl font-bold uppercase lg:max-w-[80ch] lg:overflow-hidden lg:text-ellipsis lg:whitespace-nowrap"
      >
        {{ show.name }}
        {{ show.premiered ? '(' ~ show.premiered | date('Y')





        }}{{ show.ended ? ' - ' ~ show.ended | date('Y') ~')' : show.premiered ? ')' }}
      </h1>
      <div
        class="tooltip"
        data-tip="{{ show.id in userShows ? 'Remove from my shows' : 'Add to my shows' }}"
      >
        <button
          {%
          if
          show.id
          in
          userShows
          %}
          added
          {%
          endif
          %}
          class="btn {{ show.id in userShows ? 'btn-secondary' : 'btn-primary' }} h-10 min-h-10 uppercase add-show"
          data-show-id="{{ show.id }}"
        >
          {{ show.id in userShows ? 'Remove' : 'Add' }}
        </button>
      </div>
    </div>

    <article
      class="flex gap-6 lg:gap-12 flex-col items-center lg:items-start lg:justify-center lg:flex-row"
    >
      <picture
        class="w-[210px] h-[295px] lg:w-[340px] lg:h-[500px] skeleton rounded-lg"
      >
        <source
          media="(max-width:1024px)"
          srcset="{{ show.imageMedium | default(asset('build/images/no-img.svg')) }}"
        />
        <source media="(min-width:1025px)" srcset="/shows/{{show.id}}/image" />
        <img
          src="{{ show.imageMedium | default(asset('build/images/no-img.svg')) }}"
          alt="{{ show.name }}"
          decoding="async"
          onload="this.classList.add('bg-base-200')"
          class="block w-max object-cover mx-auto rounded-lg"
        />
      </picture>
      <div
        class="flex flex-col w-[95%] lg:px-0 items-center lg:items-start gap-4 lg:w-96"
      >
        <div>
          {% for genre in show.genres %}
          <div class="badge badge-neutral h-6 px-4">{{ genre }}</div>
          {% endfor %}
        </div>

        <div
          class="stats flex justify-center lg:justify-start self-center overflow-clip lg:self-start stats-horizontal"
        >
          <div class="stat min-w-2 max-w-32 overflow-x-hidden w-max gap-2">
            <div class="stat-title text-center">Runtime</div>
            <div
              class="{{
                show.runtime
                  ? 'stat-value place-self-center'
                  : 'place-self-center h-10 flex items-center'
              }}"
            >
              {% if show.runtime is not same as(null) %}
              {{ show.runtime }}
              {% else %}
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke-width="2"
                class="size-6 stroke-current"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M9.879 7.519c1.171-1.025 3.071-1.025 4.242 0 1.172 1.025 1.172 2.687 0 3.712-.203.179-.43.326-.67.442-.745.361-1.45.999-1.45 1.827v.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9 5.25h.008v.008H12v-.008Z"
                />
              </svg>
              {% endif %}
            </div>
            <div class="stat-desc text-center">Min</div>
          </div>

          <div class="stat min-w-28 max-w-32 overflow-x-hidden w-max gap-2">
            <div class="stat-title text-center">Status</div>
            <div class="place-self-center h-10 flex items-center">
              {% if show.status is same as("Running") %}
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="2"
                class="size-6 stroke-primary"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M9 12.75 11.25 15 15 9.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"
                />
              </svg>
              {% endif %} {% if show.status is same as("Ended") %}
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke-width="2"
                class="size-6 stroke-secondary"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"
                />
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M9 9.563C9 9.252 9.252 9 9.563 9h4.874c.311 0 .563.252.563.563v4.874c0 .311-.252.563-.563.563H9.564A.562.562 0 0 1 9 14.437V9.564Z"
                />
              </svg>
              {% endif %} {% if show.status is same as("In Development") %}
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="2"
                class="size-6 stroke-secondary"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M3.375 19.5h17.25m-17.25 0a1.125 1.125 0 0 1-1.125-1.125M3.375 19.5h1.5C5.496 19.5 6 18.996 6 18.375m-3.75 0V5.625m0 12.75v-1.5c0-.621.504-1.125 1.125-1.125m18.375 2.625V5.625m0 12.75c0 .621-.504 1.125-1.125 1.125m1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125m0 3.75h-1.5A1.125 1.125 0 0 1 18 18.375M20.625 4.5H3.375m17.25 0c.621 0 1.125.504 1.125 1.125M20.625 4.5h-1.5C18.504 4.5 18 5.004 18 5.625m3.75 0v1.5c0 .621-.504 1.125-1.125 1.125M3.375 4.5c-.621 0-1.125.504-1.125 1.125M3.375 4.5h1.5C5.496 4.5 6 5.004 6 5.625m-3.75 0v1.5c0 .621.504 1.125 1.125 1.125m0 0h1.5m-1.5 0c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125m1.5-3.75C5.496 8.25 6 7.746 6 7.125v-1.5M4.875 8.25C5.496 8.25 6 8.754 6 9.375v1.5m0-5.25v5.25m0-5.25C6 5.004 6.504 4.5 7.125 4.5h9.75c.621 0 1.125.504 1.125 1.125m1.125 2.625h1.5m-1.5 0A1.125 1.125 0 0 1 18 7.125v-1.5m1.125 2.625c-.621 0-1.125.504-1.125 1.125v1.5m2.625-2.625c.621 0 1.125.504 1.125 1.125v1.5c0 .621-.504 1.125-1.125 1.125M18 5.625v5.25M7.125 12h9.75m-9.75 0A1.125 1.125 0 0 1 6 10.875M7.125 12C6.504 12 6 12.504 6 13.125m0-2.25C6 11.496 5.496 12 4.875 12M18 10.875c0 .621-.504 1.125-1.125 1.125M18 10.875c0 .621.504 1.125 1.125 1.125m-2.25 0c.621 0 1.125.504 1.125 1.125m-12 5.25v-5.25m0 5.25c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125m-12 0v-1.5c0-.621-.504-1.125-1.125-1.125M18 18.375v-5.25m0 5.25v-1.5c0-.621.504-1.125 1.125-1.125M18 13.125v1.5c0 .621.504 1.125 1.125 1.125M18 13.125c0-.621.504-1.125 1.125-1.125M6 13.125v1.5c0 .621-.504 1.125-1.125 1.125M6 13.125C6 12.504 5.496 12 4.875 12m-1.5 0h1.5m-1.5 0c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125M19.125 12h1.5m0 0c.621 0 1.125.504 1.125 1.125v1.5c0 .621-.504 1.125-1.125 1.125m-17.25 0h1.5m14.25 0h1.5"
                />
              </svg>

              {% endif %} {% if show.status is same as("To Be Determined") %}

              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke-width="2"
                class="size-6 stroke-warning"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M9.879 7.519c1.171-1.025 3.071-1.025 4.242 0 1.172 1.025 1.172 2.687 0 3.712-.203.179-.43.326-.67.442-.745.361-1.45.999-1.45 1.827v.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9 5.25h.008v.008H12v-.008Z"
                />
              </svg>
              {% endif %}
            </div>
            <div class="stat-desc text-center">{{ show.status }}</div>
          </div>

          <div class="stat min-w-28 max-w-32 overflow-x-hidden w-max gap-2">
            <div class="stat-title text-center">On</div>
            <div class="place-self-center h-10 flex items-center">
              <a href="{{ show.officialSite ?? '#' }}" target="_blank">
                <div class="tooltip" data-tip="Visit website">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke-width="1.5"
                    stroke-width="2"
                    stroke="currentColor"
                    class="size-6 hover:stroke-primary transition-colors"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      d="M6 20.25h12m-7.5-3v3m3-3v3m-10.125-3h17.25c.621 0 1.125-.504 1.125-1.125V4.875c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125v11.25c0 .621.504 1.125 1.125 1.125Z"
                    />
                  </svg>
                </div>
              </a>
            </div>
            <div class="stat-desc text-center">
              {{ show.networkName ?? show.webChannelName ?? "-" }}
            </div>
          </div>
        </div>
        <p class="text-lg">{{ show.summary | striptags }}</p>
      </div>
    </article>
    <div class="w-full mx-auto flex flex-col gap-2">
      {% set seasons = episodes | map(e => e.seasonNumber) %}

      <div
        class="navbar gap-4 flex-col lg:flex-row lg:justify-around lg:py-4 lg:px-20 lg:bg-base-200 lg:h-20 lg:rounded-lg"
      >
        <div class="stats overflow-y-clip bg-inherit">
          <div class="stat py-0">
            <div class="stat-title">Seasons</div>
            <div class="stat-value place-self-center">
              {{ episodes ? max(seasons) : "-" }}
            </div>
          </div>
          <div class="stat py-0">
            <div class="stat-title">Episodes</div>
            <div class="stat-value place-self-center">
              {{ episodes ? episodes | length : '-' }}
            </div>
          </div>
        </div>
      </div>
      <div class="w-[95%] flex flex-col gap-2 lg:w-1/2 mx-auto mb-8">
        {% if episodes %} {% for season in min(seasons)..max(seasons) %}
        <div
          class="collapse collapse-arrow rounded-lg bg-base-300 {{ season is same as(0) ? 'order-last' }}"
        >
          <input type="checkbox" />
          <div class="collapse-title text-xl font-medium">
            {% if season > 0 %} Season {{ season }}
            {% else %} Other {% endif %}
          </div>
          <div class="collapse-content">
            <div class="overflow-x-auto">
              <table class="table">
                <thead>
                  <tr>
                    <th>#</th>
                    <th>Title</th>
                    <th>Airdate</th>
                  </tr>
                </thead>
                <tbody>
                  {% set allEps = episodes | filter(e=> e.seasonNumber is same
                  as(season)) | sort((a, b) => a.episodeNumber <=>
                  b.episodeNumber) %} {% set regularEps = allEps | filter(e=>
                  e.type is same as('regular')) %} {% set specials = allEps |
                  filter(e=> e.type is not same as('regular')) %} {% for ep in
                  regularEps %}

                  <tr class="hover">
                    <th>{{ ep.episodeNumber }}</th>
                    <td>
                      <button
                        data-episode-info="{{ ep | json_encode }}"
                        class="hover:text-primary text-left transition-colors pointer"
                      >
                        {{ ep.episodeName }}
                      </button>
                    </td>
                    <td class="">
                      {{ ep.airstamp | date('M j, Y') }}
                    </td>
                  </tr>
                  {% endfor %} {% for ep in specials %}
                  <tr class="hover">
                    <th>
                      <div class="tooltip text-xs" data-tip="special">SP</div>
                    </th>
                    <td>
                      <button
                        data-episode-info="{{ ep | json_encode }}"
                        class="hover:text-primary text-left transition-colors pointer"
                        >{{ ep.episodeName }}</
                      >
                    </td>
                    <td class="">
                      {{ ep.airstamp | date('M j, Y') }}
                    </td>
                  </tr>
                  {% endfor %}
                </tbody>
              </table>
            </div>
          </div>
        </div>
        {% endfor %} {% endif %}
      </div>
    </div>
  </div>
</section>
{% endblock %}
